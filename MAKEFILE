# Detect if cross-compiling for Raspberry Pi
ifeq ($(CROSS_COMPILE), 1)
    CC = arm-linux-gnueabihf-g++
    LDFLAGS = -lrtlsdr -lusb-1.0 -lsqlite3
else
    CC = g++
    LDFLAGS = -lusb-1.0 -lsqlite3  # Exclude librtlsdr on Windows
endif

# Compiler settings
CXXFLAGS = -std=c++20 -Wall -Wextra -lpthread -Iinclude

# Directories
SRC_DIR = src
BUILD_DIR = build
BIN = InkJets

# Source files
SRCS = $(SRC_DIR)/main.cpp $(SRC_DIR)/adsb_parser.cpp $(SRC_DIR)/display.cpp $(SRC_DIR)/utils.cpp
OBJS = $(patsubst $(SRC_DIR)/%.cpp, $(BUILD_DIR)/%.o, $(SRCS))

# Default target
all: $(BIN)

# Create build directory if not exists
$(BUILD_DIR):
	mkdir -p $(BUILD_DIR)

# Compile main application
$(BIN): $(BUILD_DIR) $(OBJS)
	$(CC) $(CXXFLAGS) -o $(BIN) $(OBJS) $(LDFLAGS)

# Compile each .cpp file to .o
$(BUILD_DIR)/%.o: $(SRC_DIR)/%.cpp | $(BUILD_DIR)
	$(CC) $(CXXFLAGS) -c $< -o $@

# Clean build artifacts
clean:
	rm -f $(BIN) $(BUILD_DIR)/*.o
	rm -rf $(BUILD_DIR)

# Phony targets
.PHONY: all clean
