# Compiler settings
CXX = g++
CXXFLAGS = -std=c++20 -Wall -Wextra -lpthread

# Source files
SRC_DIR = src
BUILD_DIR = build
BIN = InkJets

# Test files
TEST_DIR = tests
TEST_BIN = test_utils test_adsb_parser test_display test_main

# Source files
SRCS = $(SRC_DIR)/main.cpp $(SRC_DIR)/adsb_parser.cpp $(SRC_DIR)/display.cpp $(SRC_DIR)/utils.cpp
OBJS = $(SRCS:.cpp=.o)

# Test sources
TEST_SRCS = $(TEST_DIR)/test_utils.cpp $(TEST_DIR)/test_adsb_parser.cpp $(TEST_DIR)/test_display.cpp $(TEST_DIR)/test_main.cpp
TEST_OBJS = $(TEST_SRCS:.cpp=.o)

# Default target
all: $(BIN)

# Compile main application
$(BIN): $(OBJS)
	$(CXX) $(CXXFLAGS) -o $(BIN) $(OBJS) -lrtlsdr -lusb-1.0 -lsqlite3

# Compile test binaries
test_utils: $(TEST_DIR)/test_utils.cpp $(SRC_DIR)/utils.cpp
	$(CXX) $(CXXFLAGS) -o $@ $^ 

test_adsb_parser: $(TEST_DIR)/test_adsb_parser.cpp $(SRC_DIR)/adsb_parser.cpp $(SRC_DIR)/utils.cpp
	$(CXX) $(CXXFLAGS) -o $@ $^ -lpthread -lrtlsdr -lusb-1.0 -lsqlite3

test_display: $(TEST_DIR)/test_display.cpp $(SRC_DIR)/display.cpp $(SRC_DIR)/utils.cpp
	$(CXX) $(CXXFLAGS) -o $@ $^ -lpthread

test_main: $(TEST_DIR)/test_main.cpp $(SRC_DIR)/adsb_parser.cpp $(SRC_DIR)/display.cpp $(SRC_DIR)/utils.cpp
	$(CXX) $(CXXFLAGS) -o $@ $^ -lpthread

# Run all tests
test: $(TEST_BIN)
	@echo "Running all tests..."
	@./test_utils && ./test_adsb_parser && ./test_display && ./test_main
	@echo "ðŸŽ‰ All tests passed!"

# Clean build artifacts
clean:
	rm -f $(BIN) $(OBJS) $(TEST_BIN)
	rm -rf $(BUILD_DIR)

# Phony targets
.PHONY: all test clean
